# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class DiaryEntry(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _date: date=None, content: str=None):  # noqa: E501
        """DiaryEntry - a model defined in Swagger

        :param _date: The _date of this DiaryEntry.  # noqa: E501
        :type _date: date
        :param content: The content of this DiaryEntry.  # noqa: E501
        :type content: str
        """
        self.swagger_types = {
            '_date': date,
            'content': str
        }

        self.attribute_map = {
            '_date': 'date',
            'content': 'content'
        }
        self.__date = _date
        self._content = content

    @classmethod
    def from_dict(cls, dikt) -> 'DiaryEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DiaryEntry of this DiaryEntry.  # noqa: E501
        :rtype: DiaryEntry
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self) -> date:
        """Gets the _date of this DiaryEntry.


        :return: The _date of this DiaryEntry.
        :rtype: date
        """
        return self.__date

    @_date.setter
    def _date(self, _date: date):
        """Sets the _date of this DiaryEntry.


        :param _date: The _date of this DiaryEntry.
        :type _date: date
        """
        if _date is None:
            raise ValueError("Invalid value for `_date`, must not be `None`")  # noqa: E501

        self.__date = _date

    @property
    def content(self) -> str:
        """Gets the content of this DiaryEntry.


        :return: The content of this DiaryEntry.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this DiaryEntry.


        :param content: The content of this DiaryEntry.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content
